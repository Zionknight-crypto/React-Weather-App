{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\poeti\\\\WebD\\\\webdev-2019\\\\React\\\\life-cycle-methods\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // What is state and props?\n// State - stored data in an initial state and can be updated or set at any time.\n// Props - A data carrier from parent to child elements.\n\nconst Count = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.count), React.createElement(\"button\", {\n    onClick: props.addOne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Add one\"));\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addOne = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    console.log('I am from the constructor');\n    this.state = {\n      countries: []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.eu/rest/v2/all';\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        countries: data,\n        count: 0\n      });\n      console.log(data);\n    });\n    console.log('component mounted');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps, prevState);\n    console.log('I am coming from the update');\n  }\n\n  render() {\n    console.log('I am from render');\n    return React.createElement(\"div\", {\n      className: \"app__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"React Life Cycle\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Countries:\", this.state.countries.length), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/poeti/WebD/webdev-2019/React/life-cycle-methods/src/App.js"],"names":["React","Component","Count","props","count","addOne","App","constructor","setState","state","console","log","countries","componentDidMount","url","fetch","then","response","json","data","componentDidUpdate","prevProps","prevState","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CAGA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAX,CADA,EAEA;AAAQ,IAAA,OAAO,EAAED,KAAK,CAACE,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFA,CADA;AAKD,CAND;;AASA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA4BrBE,MA5BqB,GA4BZ,MAAM;AACb,WAAKG,QAAL,CAAc;AAACJ,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,GAAmB;AAA3B,OAAd;AACD,KA9BoB;;AAGjBM,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,SAAKF,KAAL,GAAa;AACXG,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,sCAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,WAAKX,QAAL,CAAc;AACZI,QAAAA,SAAS,EAAEO,IADC;AAEZf,QAAAA,KAAK,EAAE;AAFK,OAAd;AAIAM,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACD,KARD;AASAT,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AAEHS,EAAAA,kBAAkB,CAACC,SAAD,EAAWC,SAAX,EAAsB;AACtCZ,IAAAA,OAAO,CAACC,GAAR,CAAYU,SAAZ,EAAsBC,SAAtB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;;AAICY,EAAAA,MAAM,GAAI;AACRb,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKF,KAAL,CAAWG,SAAX,CAAqBY,MAApC,CAFF,MADF;AAMD;;AAxCyB;;AA4C5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n// What is state and props?\n// State - stored data in an initial state and can be updated or set at any time.\n// Props - A data carrier from parent to child elements.\nconst Count = props => {\n  return (\n  <div>\n  <h1>{props.count}</h1>\n  <button onClick={props.addOne}>Add one</button>\n  </div>)\n} \n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    console.log('I am from the constructor')\n\n    this.state = {\n      countries: []\n    }\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.eu/rest/v2/all'\n    fetch(url)\n    .then(response=>response.json())\n    .then(data => {\n      this.setState({\n        countries: data,\n        count: 0\n      })\n      console.log(data)\n    })\n    console.log('component mounted')\n  }\n\ncomponentDidUpdate(prevProps,prevState) {\n  console.log(prevProps,prevState)\n  console.log('I am coming from the update')\n}\naddOne = () => {\n  this.setState({count: this.state.count + 1}) \n}\n  render () {\n    console.log('I am from render')\n    return (\n      <div className=\"app__container\">\n        <h1>React Life Cycle</h1>\n        <h2>Countries:{this.state.countries.length}</h2> {/*To show the initial state of counrties []*/}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}