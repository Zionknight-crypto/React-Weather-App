{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\poeti\\\\WebD\\\\webdev-2019\\\\React\\\\life-cycle-methods\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // What is state and props?\n// State - stored data in an initial state and can be updated or set at any time.\n// Props - A data carrier from parent to child elements.\n\nconst Count = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.count), React.createElement(\"button\", {\n    onClick: props.addOne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Add one\"));\n};\n\nconst Feedback = ({\n  feedback\n}) => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, feedback);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addOne = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    console.log('I am from the constructor');\n    this.state = {\n      countries: []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.eu/rest/v2/all';\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        countries: data,\n        count: 0,\n        names: ['one', 'two', 'three', 'four']\n      });\n      console.log(data);\n    });\n    console.log('component mounted');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('prev Props: ', prevProps, 'prev State: ', prevState);\n    console.log('I am coming from the update');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('Next state from should update: ', nextState);\n\n    if (nextState.count < 11) {\n      return true;\n    }\n\n    return false;\n  }\n\n  render() {\n    console.log('I am from render');\n    return React.createElement(\"div\", {\n      className: \"app__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"React Life Cycle\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Countries:\", this.state.countries.length), \" \", React.createElement(Count, {\n      count: this.state.count,\n      addOne: this.addOne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), this.state.count >= 10 ? React.createElement(Feedback, {\n      feedback: \"You only get 10 chances. Sorry buddy!\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : '');\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/poeti/WebD/webdev-2019/React/life-cycle-methods/src/App.js"],"names":["React","Component","Count","props","count","addOne","Feedback","feedback","App","constructor","setState","state","console","log","countries","componentDidMount","url","fetch","then","response","json","data","names","componentDidUpdate","prevProps","prevState","shouldComponentUpdate","nextProps","nextState","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n// What is state and props?\n// State - stored data in an initial state and can be updated or set at any time.\n// Props - A data carrier from parent to child elements.\nconst Count = props => {\n  return (\n  <div>\n  <h1>{props.count}</h1>\n  <button onClick={props.addOne}>Add one</button>\n  </div>)\n} \n\nconst Feedback = ( { feedback } ) => <p>{feedback}</p> \n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    console.log('I am from the constructor')\n\n    this.state = {\n      countries: []\n    }\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.eu/rest/v2/all'\n    fetch(url)\n    .then(response=>response.json())\n    .then(data => {\n      this.setState({\n        countries: data,\n        count: 0,\n        names: ['one','two','three','four']\n      })\n      console.log(data)\n    })\n    console.log('component mounted')\n  }\n\ncomponentDidUpdate(prevProps,prevState) {\n  console.log('prev Props: ', prevProps, 'prev State: ', prevState)\n  console.log('I am coming from the update')\n  \n}\n\nshouldComponentUpdate(nextProps, nextState) {\n  console.log('Next state from should update: ', nextState)\n  if(nextState.count < 11) {\n    return true\n  }\nreturn false \n}\n\n\naddOne = () => {\n  this.setState({count: this.state.count + 1}) \n}\n  render () {\n    console.log('I am from render')\n    return (\n      <div className=\"app__container\">\n        <h1>React Life Cycle</h1>\n        <h2>Countries:{this.state.countries.length}</h2> {/*To show the initial state of counrties []*/}\n        <Count count={this.state.count} addOne={this.addOne} /> \n        {\n          this.state.count >= 10 ? <Feedback feedback='You only get 10 chances. Sorry buddy!' /> : ''\n        }\n        \n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}