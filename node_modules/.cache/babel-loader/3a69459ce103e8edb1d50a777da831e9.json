{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\poeti\\\\WebD\\\\webdev-2019\\\\React\\\\life-cycle-methods\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // What is state and props?\n// State - stored data in an initial state and can be updated or set at any time.\n// Props - A data carrier from parent to child elements.\n\nconst Count = ({\n  count\n}) => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, count);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    console.log('I am from the constructor');\n    this.state = {\n      countries: []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.eu/rest/v2/all';\n    fetch(url).then(response => response.json()).then(data => {\n      this.setState({\n        countries: data,\n        count: 0\n      });\n      console.log(data);\n    });\n    console.log('component mounted');\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps, prevState);\n    console.log('I am coming from the update');\n  }\n\n  render() {\n    console.log('I am from render');\n    return React.createElement(\"div\", {\n      className: \"app__container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"React Life Cycle\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Countries:\", this.state.countries.length), \" \");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/poeti/WebD/webdev-2019/React/life-cycle-methods/src/App.js"],"names":["React","Component","Count","count","App","constructor","props","console","log","state","countries","componentDidMount","url","fetch","then","response","json","data","setState","componentDidUpdate","prevProps","prevState","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP,C,CAGA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAL,CAA3B;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAG,sCAAZ;AACAC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADhB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,WAAKC,QAAL,CAAc;AACZR,QAAAA,SAAS,EAAEO,IADC;AAEZd,QAAAA,KAAK,EAAE;AAFK,OAAd;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACD,KARD;AASAV,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AAEHW,EAAAA,kBAAkB,CAACC,SAAD,EAAWC,SAAX,EAAsB;AACtCd,IAAAA,OAAO,CAACC,GAAR,CAAYY,SAAZ,EAAsBC,SAAtB;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD;;AAECc,EAAAA,MAAM,GAAI;AACRf,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAe,KAAKC,KAAL,CAAWC,SAAX,CAAqBa,MAApC,CAFF,MADF;AAMD;;AAtCyB;;AA0C5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n// What is state and props?\n// State - stored data in an initial state and can be updated or set at any time.\n// Props - A data carrier from parent to child elements.\nconst Count = ({count}) => <h1>{count}</h1>\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    console.log('I am from the constructor')\n\n    this.state = {\n      countries: []\n    }\n  }\n\n  componentDidMount() {\n    const url = 'https://restcountries.eu/rest/v2/all'\n    fetch(url)\n    .then(response=>response.json())\n    .then(data => {\n      this.setState({\n        countries: data,\n        count: 0\n      })\n      console.log(data)\n    })\n    console.log('component mounted')\n  }\n\ncomponentDidUpdate(prevProps,prevState) {\n  console.log(prevProps,prevState)\n  console.log('I am coming from the update')\n}\n\n  render () {\n    console.log('I am from render')\n    return (\n      <div className=\"app__container\">\n        <h1>React Life Cycle</h1>\n        <h2>Countries:{this.state.countries.length}</h2> {/*To show the initial state of counrties []*/}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}